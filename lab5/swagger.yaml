swagger: '2.0'
info:
  description: This is a web-service for pharmacy
  version: 1.0.0
  title: Pharmacy Service
host: localhost:5000
basePath: /
paths:
  /item:
    get:
      tags:
        - item
      summary: Returns inventory
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Item'
    post:
      tags:
        - item
      summary: Add a new item to shop
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/Item'
      responses:
        200:
          description: Item object
          schema:
            $ref: "#/definitions/Item"
        400:
          description: Bad data
        401:
          description: Unauthorized
        406:
          description: Not Acceptable

  / item/{id}:
    get:
      tags:
        - item
      summary: Returns a item
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Unique id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Item'
        '400':
          description: Invalid ID supplied
        '404':
          description: Item not found
    put:
      tags:
        - item
      summary: Updates an information of item 
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: Item object
          required: true
          schema:
            $ref: "#/definitions/Item"
        - name: id
          in: path
          description: ID of item that needs to be updated
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: Item object
          schema:
            $ref: "#/definitions/Item"
        400:
          description: Bad data
        401:
          description: Unauthorized
        404:
          description: Not Found
        406:
          description: Not Acceptable
    delete:
      tags:
        - item 
      summary: Deletes a item
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Item id to delete
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
        401:
          description: Unauthorized
        404:
          description: Item not found
        406:
          description: Not Acceptable

  /user:
    get:
      tags:
        - user
      summary: Return an info about users
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        200:
          description: User object
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
    post:
      tags:
        - user
      summary: Create new user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
        - in: query
          name: provisorStatus
          description: Flag for adding user as provisor
          required: false
          type: string
      responses:
        200:
          description: User object
          schema:
            $ref: "#/definitions/User"
        400:
          description: Bad data
        401:
          description: Unauthorized
        406:
          description: Not Acceptable
  /user/{id}:
    get:
      tags:
        - user
      summary: Return an info about user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Unique id
          required: true
          type: integer
          format: int64
      responses:
        200:
          description: User object
          schema:
            $ref: "#/definitions/User"
        404:
          description: Not Found
    put:
      tags:
        - user
      summary: Update user data
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Unique id
          required: true
          type: integer
          format: int64
        - in: body
          name: body
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        200:
          description: User object
          schema:
            $ref: "#/definitions/User"
        400:
          description: Bad data
        401:
          description: Unauthorized
        404:
          description: Not Found
        406:
          description: Not Acceptable
    delete:
      tags:
        - user
      summary: Delete user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          description: Unique id
          required: true
          type: integer
      responses:
        200:
          description: successful operation
        401:
          description: Unauthorized
        404:
          description: Not Found
        406:
          description: Not Acceptable

  /order:
    post:
      tags:
      - order
      summary: Add a new item order
      produces:
      - application/json
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: "#/definitions/Order"
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/Order"
        400:
          description: Invalid Order
  /order/{id}:
    get:
      tags:
      - order
      summary: Return item order
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
          description: successful operation
          schema:
            $ref: "#/definitions/Order"
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
    delete:
      tags:
      - order
      summary: Delete item order by ID
      produces:
      - application/json
      parameters:
      - name: id
        in: path
        required: true
        type: integer
        format: int64
      responses:
        200:
            description: successful operation
            schema:
              $ref: "#/definitions/Order"
        400:
          description: Invalid ID supplied
        404:
          description: Order not found
  /order/special:
    post:
      tags:
      - order
      summary: "Add a item to demand"
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          description: User object
          required: true
          schema:
            $ref: "#/definitions/Order"
      responses:
        200:
          description: User object
          schema:
            $ref: "#/definitions/Order"
        400:
          description: Bad data
        401:
          description: Unauthorized
        406:
          description: Not Acceptable

definitions:
  Item:
    type: object
    properties:
      name:
        type: string
      id:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int64
      price:
        type: string
      describe:
        type: string
  User:
    type: object
    properties:
      id:
        type: integer
        format: int64
      username:
        type: string
      provisorStatus:
        type: boolean
        default: false
  Order:
    type: object
    properties:
      id:
        type: integer
        format: int64
      userID:
        type: integer
        format: int64
      quantity:
        type: integer
        format: int64
      status:
        type: string
        description: Order status
        enum:
        - placed
        - approved
        - delivered
      complete:
        type: boolean
        default: false